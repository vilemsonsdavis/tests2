/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package desasspelegui;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;

/*
 *
 * @author Davis
 */
public class spele extends javax.swing.JPanel {

    /**
     * Creates new form spele
     */
    public spele() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        playerField = new javax.swing.JLabel();
        poga1 = new javax.swing.JButton();
        poga2 = new javax.swing.JButton();
        poga3 = new javax.swing.JButton();
        poga4 = new javax.swing.JButton();
        poga5 = new javax.swing.JButton();
        poga6 = new javax.swing.JButton();
        poga7 = new javax.swing.JButton();
        poga8 = new javax.swing.JButton();
        poga9 = new javax.swing.JButton();
        winnerField = new javax.swing.JLabel();
        repeat = new javax.swing.JButton();
        firstResult = new javax.swing.JLabel();
        secondResult = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(102, 102, 102));
        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Desas spēle by Dāvis Vilemsons", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 102, 102)), "Desas spēle by Dāvis Vilemsons", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 255, 0))); // NOI18N

        playerField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        playerField.setForeground(new java.awt.Color(255, 0, 0));
        playerField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerField.setText("Spēle sākusies! 1. spēlētāja gājiens!");
        playerField.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        poga1.setBackground(new java.awt.Color(255, 255, 255));
        poga1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga1ActionPerformed(evt);
            }
        });

        poga2.setBackground(new java.awt.Color(255, 255, 255));
        poga2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga2ActionPerformed(evt);
            }
        });

        poga3.setBackground(new java.awt.Color(255, 255, 255));
        poga3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga3ActionPerformed(evt);
            }
        });

        poga4.setBackground(new java.awt.Color(255, 255, 255));
        poga4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga4ActionPerformed(evt);
            }
        });

        poga5.setBackground(new java.awt.Color(255, 255, 255));
        poga5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga5ActionPerformed(evt);
            }
        });

        poga6.setBackground(new java.awt.Color(255, 255, 255));
        poga6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga6ActionPerformed(evt);
            }
        });

        poga7.setBackground(new java.awt.Color(255, 255, 255));
        poga7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga7ActionPerformed(evt);
            }
        });

        poga8.setBackground(new java.awt.Color(255, 255, 255));
        poga8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga8ActionPerformed(evt);
            }
        });

        poga9.setBackground(new java.awt.Color(255, 255, 255));
        poga9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poga9ActionPerformed(evt);
            }
        });

        winnerField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        winnerField.setForeground(new java.awt.Color(255, 0, 0));

        repeat.setText("Nodzēst");
        repeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(playerField, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(poga1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(poga2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(poga3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(poga7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(poga8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(repeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(poga9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(winnerField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(poga4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(poga5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(poga6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(secondResult, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firstResult, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poga2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poga4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poga8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poga9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(winnerField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repeat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secondResult)
                .addGap(4, 4, 4))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    boolean player = false, winner = false;
    ImageIcon X = new ImageIcon("C://Users//Davis//Desktop//testsGH//tests2//desasSpeleGui//src//desasspelegui//X.png");
    ImageIcon O = new ImageIcon("C://Users//Davis//Desktop//testsGH//tests2//desasSpeleGui//src//desasspelegui//O.png");
    Image background = Toolkit.getDefaultToolkit().createImage("C://Users//Davis//Desktop//testsGH//tests2//desasSpeleGui//src//desasspelegui//tictac.jpg");
    
    int laukums[] = new int[10];
    int gajienuSkaits = 0, firstWins = 0, secondWins = 0;
    

    public void Masivs() {
        for (int k = 0; k < laukums.length ; k++) {
            laukums[k] = 0;
        }
    }

    private void poga1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga1ActionPerformed
        if (checkField(1) == false) {
            gajiens(1);

            if (player) {
                poga1.setIcon(X);
            } else {
                poga1.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga1ActionPerformed

    private void poga2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga2ActionPerformed
        if (checkField(2) == false) {
            gajiens(2);

            if (player) {
                poga2.setIcon(X);
            } else {
                poga2.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga2ActionPerformed

    private void poga3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga3ActionPerformed
        if (checkField(3) == false) {
            gajiens(3);

            if (player) {
                poga3.setIcon(X);
            } else {
                poga3.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga3ActionPerformed

    private void poga4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga4ActionPerformed
        if (checkField(4) == false) {
            gajiens(4);

            if (player) {
                poga4.setIcon(X);
            } else {
                poga4.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga4ActionPerformed

    private void poga5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga5ActionPerformed
        if (checkField(5) == false) {
            gajiens(5);

            if (player) {
                poga5.setIcon(X);
            } else {
                poga5.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga5ActionPerformed

    private void poga6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga6ActionPerformed
        if (checkField(6) == false) {
            gajiens(6);

            if (player) {
                poga6.setIcon(X);
            } else {
                poga6.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga6ActionPerformed

    private void poga7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga7ActionPerformed
        if (checkField(7) == false) {
            gajiens(7);

            if (player) {
                poga7.setIcon(X);
            } else {
                poga7.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga7ActionPerformed

    private void poga8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga8ActionPerformed
        if (checkField(8) == false) {
            gajiens(8);

            if (player) {
                poga8.setIcon(X);
            } else {
                poga8.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga8ActionPerformed

    private void poga9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poga9ActionPerformed
        if (checkField(9) == false) {
            gajiens(9);

            if (player) {
                poga9.setIcon(X);
            } else {
                poga9.setIcon(O);
            }
        }
    }//GEN-LAST:event_poga9ActionPerformed

    private void repeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatActionPerformed
        Clear();
    }//GEN-LAST:event_repeatActionPerformed

    public void gajiens(int field) {
        
        gajienuSkaits++;

        player = !player;

        if (player) {
            laukums[field] = 1;
        } else {
            laukums[field] = 2;
        }

        checkWinner();

        if (winner == false) {
            int spel;
            if (player) {
                spel = 2;
            } else {
                spel = 1;
            }

            playerField.setText(spel + ". Spēlētāja gājiens!");
        }
        if (gajienuSkaits==9 && winner == false){
            playerField.setText("Spēle beigusies! NEIZŠĶIRTS!");
            repeat.setText("Spēlēt vēlreiz!");
        }
    }

    public void checkWinner() {
        int playerValue;

        if (player) { 
            playerValue = 1;
        } else {
            playerValue = 2;
        }

        if ((laukums[1] == playerValue && laukums[2] == playerValue && laukums[3] == playerValue) || (laukums[4] == playerValue && laukums[5] == playerValue && laukums[6] == playerValue) || (laukums[7] == playerValue && laukums[8] == playerValue && laukums[9] == playerValue)) {
            winnerField.setText(playerValue + ". spēlētājs uzvarēja!");
            playerField.setText("Spēle beigusies!");
            repeat.setText("Spēlēt vēlreiz!");
            winner = true;
            CountWins();
            firstResult.setText("1. Spēlētājs ir uzvarējis " + firstWins + " reizes!");
            secondResult.setText("2. Spēlētājs ir uzvarējis " + secondWins + " reizes!");
            
        }

        if ((laukums[1] == playerValue && laukums[4] == playerValue && laukums[7] == playerValue) || (laukums[2] == playerValue && laukums[5] == playerValue && laukums[8] == playerValue) || (laukums[3] == playerValue && laukums[6] == playerValue && laukums[9] == playerValue)) {
            winnerField.setText(playerValue + ". spēlētājs uzvarēja!");
            playerField.setText("Spēle beigusies!");
            repeat.setText("Spēlēt vēlreiz!");
            winner = true;
            CountWins();
            firstResult.setText("1. Spēlētājs ir uzvarējis " + firstWins + " reizes!");
            secondResult.setText("2. Spēlētājs ir uzvarējis " + secondWins + " reizes!");
        }

        if ((laukums[1] == playerValue && laukums[5] == playerValue && laukums[9] == playerValue) || (laukums[3] == playerValue && laukums[5] == playerValue && laukums[7] == playerValue)) {
            winnerField.setText(playerValue + ". spēlētājs uzvarēja!");
            playerField.setText("Spēle beigusies!");
            repeat.setText("Spēlēt vēlreiz!");
            winner = true;
            CountWins();
            firstResult.setText("1. Spēlētājs ir uzvarējis " + firstWins + " reizes!");
            secondResult.setText("2. Spēlētājs ir uzvarējis " + secondWins + " reizes!");
        }
    }

    public boolean checkField(int field) {
        if (laukums[field] != 0) {
            playerField.setText("Lauciņš jau ir aizņemts! Izdari gājienu vēlreiz!");
            return true;
        }
        return false;
    }
    
    public void Clear (){
        gajienuSkaits = 0;
        Masivs();
        winner = false;
        player = false;
        poga1.setIcon(null);
        poga2.setIcon(null);
        poga3.setIcon(null);
        poga4.setIcon(null);
        poga5.setIcon(null);
        poga6.setIcon(null);
        poga7.setIcon(null);
        poga8.setIcon(null);
        poga9.setIcon(null);
        
        playerField.setText("1. Spēlētāja gājiens!");
        
    }
    
    public void CountWins (){
        if (player){
            firstWins++;
        }else{
            secondWins++;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel firstResult;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel playerField;
    private javax.swing.JButton poga1;
    private javax.swing.JButton poga2;
    private javax.swing.JButton poga3;
    private javax.swing.JButton poga4;
    private javax.swing.JButton poga5;
    private javax.swing.JButton poga6;
    private javax.swing.JButton poga7;
    private javax.swing.JButton poga8;
    private javax.swing.JButton poga9;
    private javax.swing.JButton repeat;
    private javax.swing.JLabel secondResult;
    private javax.swing.JLabel winnerField;
    // End of variables declaration//GEN-END:variables
}
